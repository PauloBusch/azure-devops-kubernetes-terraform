// SCRIPTED
// node { stage("Build") {} }
// node { echo "Build" }

// DECLARATIVE
pipeline {
	agent any
	// agent { docker { image "maven:3.9.7" } }
	environment {
		dockerHome = tool "myDocker"
		mavenHome = tool "myMaven"
		PATH = "$dockerHome/bin:$mavenHome/bin:$PATH"
	}

	stages {
		stage("Checkout") {
			steps {
				echo "Checkout"
				sh "mvn --version"
				sh "docker version"
				echo "PATH: $PATH"
				echo "BUILD_NUMBER: $env.BUILD_NUMBER"
				echo "BUILD_ID: $env.BUILD_ID"
				echo "JOB_NAME: $env.JOB_NAME"
				echo "BUILD_TAG: $env.BUILD_TAG"
				echo "BUILD_URL: $env.BUILD_URL"
			}
		}

		stage("Compile") {
			steps {
				sh "mvn clean compile"
			}
		}

		stage("Unit Tests") {
			steps {
				sh "mvn test"
			}
		}

		stage("Integration Tests") {
			steps {
				sh "mvn failsafe:integration-test failsafe:verify"
			}
		}

		stage("Package") {
			steps {
				sh "mvn package -DskipTests"
			}
		}

		stage("Build Docker Image") {
			steps {
				// docker build -t pauloricardobusch/currency-exchange-microservice:$env.BUILD_TAG
				script {
					dockerImage = docker.build("pauloricardobusch/currency-exchange-microservice:${env.BUILD_TAG}")
				}
			}
		}

		stage("Push Docker Image") {
			steps {
				script {
					docker.withRegistry("", "dockerhub") {
						dockerImage.push();
						dockerImage.push("latest");
					}
				}
			}
		}
	}
	
	post {
		always {
			echo "Execute always"
		}
		success {
			echo "Executed with success"
		}
		failure {
			echo "Executed with error"
		}
	}
}
